- name: Ensure local certs directory exists
  file: state=directory path=/usr/local/share/ca-certificates

- name: Install rootCA certificate
  copy: src=rootCA.crt dest=/usr/local/share/ca-certificates/rootCA.crt

- name: Update cert index
  shell: /usr/sbin/update-ca-certificates

- name: Copy root CA key and crt
  copy: src={{item}} dest=/tmp/{{item}}
  with_items:
   - rootCA.crt
   - rootCA.key

- name: create ssl signed key
  command: openssl genrsa -des3 -out marathon.key -passout "env:MARATHON_KEY_PASSWORD"
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"

- name: generate a CSR
  command: openssl req -new -key marathon.key -passin "env:MARATHON_KEY_PASSWORD" -subj "/C={{ item.country|default('') }}/ST={{ item.state|default('') }}/L={{ item.city|default('') }}/O={{ item.organization|default('') }}/OU={{ item.unit|default('') }}/CN={{ item.name }}/emailAddress={{ item.email|default('') }}/" -out marathon.csr
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"
  with_items: openssl_self_signed

- name: generate and sign cert
  command: openssl x509 -req -in marathon.csr -passin "env:MARATHON_KEY_PASSWORD" -CA /tmp/rootCA.crt -CAkey /tmp/rootCA.key -CAcreateserial -out marathon.pem -days 3650
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"

- name: extract pcks12
  command: openssl pkcs12 -inkey marathon.key -passin "env:MARATHON_KEY_PASSWORD" -name marathon -in marathon.pem -password "env:MARATHON_PKCS_PASSWORD" -export -out marathon.pkcs12
  environment:
    MARATHON_KEY_PASSWORD: "{{ key_password }}"
    MARATHON_PKCS_PASSWORD: "{{ pkcs_password }}"

- name: create keystore dir
  file: path="{{ marathon_keystore_path | dirname }}" state=directory

- name: generate keystore
  command: keytool -importkeystore -srckeystore marathon.pkcs12 -srcalias marathon -srcstorepass $MARATHON_PKCS_PASSWORD -srcstoretype PKCS12 -destkeystore "{{ marathon_keystore_path}}" -deststorepass $MARATHON_JKS_PASSWORD
  environment: 
    MARATHON_PKCS_PASSWORD: "{{ pkcs_password }}"
    MARATHON_JKS_PASSWORD: "{{ jks_password }}"

